apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-station-management-deployment
  labels:
    app: iot-station-management
  namespace: smart-city-traffic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iot-station-management
  template:
    metadata:
      labels:
        app: iot-station-management
    spec:
      containers:
        - name: iot-station-management
          # image pushed to ECR in AWS
          image: 319282596033.dkr.ecr.us-east-1.amazonaws.com/smart_city_traffic/iot_station_management:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: APP_ENV
              value: dev
              # postgres rds instance in AWS
            - name: POSTGRES_HOST
              value: jdbc:postgresql://cmpe-295-smart-city-traffic.cljhnleryoi3.us-east-1.rds.amazonaws.com:5432/smart_city_traffic
            - name: POSTGRES_USERNAME
              value: iot_station
            - name: POSTGRES_PASSWORD
              value: iot_station
            - name: TRAFFIC_API_KEY
              value: ""
            - name: TRAFFIC_API_KEY_CALIFORNIA
              value: ""
              # mongo host is DNS of EC2 instance running mongo container
            - name: MONGODB_URI
              value: "mongodb://iot_station:iot_station@ec2-54-175-90-92.compute-1.amazonaws.com:27017/trafficdata"
            - name: JAVA_TOOL_OPTIONS
              value: "-Duser.timezone=US/Pacific"
            - name: BEGIN_POLLING
              value: "true"
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            initialDelaySeconds: 40
            periodSeconds: 20
            failureThreshold: 5
